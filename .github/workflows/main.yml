name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 20
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Cache root node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-root-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-root-

      - name: Cache CLI node_modules
        uses: actions/cache@v2
        with:
          path: |
            packages/teleform-cli/node_modules
          key: ${{ runner.os }}-cli-${{ hashFiles('packages/teleform-cli/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cli-

      - name: Cache Local Server node_modules
        uses: actions/cache@v2
        with:
          path: |
            packages/local-server/node_modules
          key: ${{ runner.os }}-local-server-${{ hashFiles('packages/local-server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-local-server-

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  create-release:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 20
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Bump version and push tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          npm version patch -m "ci: bump version to %s"
          git push --follow-tags
          echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          release_name: Release v${{ env.PACKAGE_VERSION }}
          draft: false
          prerelease: false

  publish:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 20
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Publish CLI package
        run: |
          cd packages/cli
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Local Server package
        run: |
          cd packages/local-server
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}